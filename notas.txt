yarn global add create-react-app
# npm install -g create-react-app

create-react-app games_crud
cd games_crud
yarn start

yarn add redux react-redux redux-thunk
# npm install --save redux react-redux redux-thunk

# Para usar el plugin de chrome de Redux, como dependencia de dev (--save-dev)
yarn add --dev redux-devtools-extension
# o npm install --save-dev redux-devtools-extension

Redux Setup en src/index.js
1. Crear la carpeta src/reducers, que va a contener las funciones reducers de mi app.
2. Crear el reducer principal (src/rootReducer.js), que combina los reducers usando combineReducers
de redux.

3. Crear Store usando createStore de redux, pasandole el rootReducer y los middlewares.
Estos middlewares se pasan usando la funcion applyMiddleware de redux.
En este caso tenemos solo redux thunk. Envolvemos todo con el composer de redux dev tools, pero esto es opcional

4. Crear el Provider, que es lo que vincula React con Redux, asi q lo importamos de react-redux,
y le pasamos la store creada, encerrando toda la app en ese componente Provider


React Router (4)
No instalamos el paquete react-router directamente, sino el correspondiente ya sea
web (react-router-dom) o mobile (react-router-native)
yarn add react-router-dom
# o npm install --save react-router-dom

En src/index.js encerramos la app con un Router. Como es navegador usamos
<BrowserRouter>
  <App />
</BrowserRouter>

Backend server
brew install mongo

# start mongo (no background service)
mongod --config /usr/local/etc/mongod.conf

npm init -y # create package.json for the backend only
yarn add express mongodb # dependencies for backend
yarn add --dev nodemon babel-cli babel-preset-es2015 # transpile ES6
# nodemon monitor for changes and automatically restarts the server.

# crear .babelrc en /backend y configurar el preset para q sea es2015

En la app de React, en package.json, configurar el proxy, que es el server de backend, poniendo
localhost:8080, que es donde corre el servidor de express.

en package.json del backend, cambiar el script start para que use nodemon
nodemon --exec babel-node -- server.js

# En mongo, crear database con el nombre indicado en server.js
> db
test
> use crudwithredux # crear y moverme
switched to db crudwithredux
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
# No aparece porq esta vacia, pero existe

> db.games.insert({ title: 'Super Mario Bros' })



-------------------------------------------------------
# start mongo
mongod --config /usr/local/etc/mongod.conf

# start backend
cd src/backend/
yarn start

# Ahora en la raiz
yarn start